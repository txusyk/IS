/*
 * The MIT License
 *
 * Copyright 2016 Josu Alvarez <jalvarez041.ehu.eus>.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

/**
 * @author josu
 */
public class TableroGraficoFinal extends javax.swing.JFrame implements ActionListener {

    int contMinas;
    int numCasillas;
    int cont = 0;

    /**
     * Creates new form TableroGraficoFinal
     */
    public TableroGraficoFinal() {
        initComponents();
        this.numCasillas = 0;
        this.contMinas = 0;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        //e.getSource() nos devuelve la casilla que ha sido clickada
        CasillaGrafica temp2 = (CasillaGrafica) e.getSource();
        if (temp2.estaMinado()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Has perdido. Has clickado una mina");
            this.cont = 0; //si pierdes se resetea el numero de casillas clickadas
        } else {
            temp2.setBackground(Color.darkGray);
            cont++; //aumenta por no ser una mina
            if ((this.numCasillas - this.contMinas) == cont) { //en caso de que no queden casillas vacias, se termina el juego
                javax.swing.JOptionPane.showMessageDialog(this, "Has ganado. No quedan minas");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_datos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        filas = new javax.swing.JTextField();
        columnas = new javax.swing.JTextField();
        boton_comenzar = new javax.swing.JButton();
        panel_juego = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Filas:");

        jLabel2.setText("Columnas:");

        boton_comenzar.setText("Comenzar");
        boton_comenzar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                boton_comenzarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_datosLayout = new javax.swing.GroupLayout(panel_datos);
        panel_datos.setLayout(panel_datosLayout);
        panel_datosLayout.setHorizontalGroup(
                panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panel_datosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panel_datosLayout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(4, 4, 4)
                                                .addComponent(columnas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panel_datosLayout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(filas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(37, 37, 37)))
                                .addComponent(boton_comenzar)
                                .addGap(306, 306, 306))
        );
        panel_datosLayout.setVerticalGroup(
                panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panel_datosLayout.createSequentialGroup()
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(filas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel_datosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(columnas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 14, Short.MAX_VALUE))
                        .addGroup(panel_datosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(boton_comenzar)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(panel_datos, BorderLayout.PAGE_START);

        javax.swing.GroupLayout panel_juegoLayout = new javax.swing.GroupLayout(panel_juego);
        panel_juego.setLayout(panel_juegoLayout);
        panel_juegoLayout.setHorizontalGroup(
                panel_juegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 514, Short.MAX_VALUE)
        );
        panel_juegoLayout.setVerticalGroup(
                panel_juegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 357, Short.MAX_VALUE)
        );

        getContentPane().add(panel_juego, BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_comenzarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_boton_comenzarActionPerformed
        // TODO add your handling code here:
        iniciar();
        this.paintAll(this.getGraphics()); //Dibuja de nuevo todo el tablero


    }//GEN-LAST:event_boton_comenzarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableroGraficoFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableroGraficoFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableroGraficoFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableroGraficoFinal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableroGraficoFinal().setVisible(true);
            }
        });
    }

    //Metodo de inicio del juego
    private void iniciar() {

        this.panel_juego.removeAll();

        int nFilas, nColum;

        nFilas = Integer.parseInt(this.filas.getText()); //pasamos el contenido del cuadro de texto llamado
        //filas a integer y lo guardamos en 'nFilas'
        nColum = Integer.parseInt(this.columnas.getText()); //hacemos lo mismo con las columnas

        this.panel_juego.setLayout(new GridLayout(nFilas, nColum));

        this.numCasillas = nFilas * nColum;

        this.contMinas = 0;

        for (int i = 0; i < nFilas; i++) { //nos movemos a traves de las filas
            for (int j = 0; j < nColum; j++) { //nos movemos a traves de las columnas

                CasillaGrafica temp = new CasillaGrafica(); //creamos una casilla temporal
                temp.addActionListener(this); //de esta forma todos los botones que vayamos creando, al ser clikados
                // ejecutan el metodo ActionPerformed declarado arriba
                if (temp.estaMinado()) { //comprobamos si es una mina
                    this.contMinas++; //aumentamos el contador de minas
                }
                temp.setVisible(true); //hacemos que la casilla temporal que hemos creado sea visible
                this.panel_juego.add(temp); //añadimos la casilla al panel de juego (JPanel)
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_comenzar;
    private javax.swing.JTextField columnas;
    private javax.swing.JTextField filas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel panel_datos;
    private javax.swing.JPanel panel_juego;
    // End of variables declaration//GEN-END:variables
}
